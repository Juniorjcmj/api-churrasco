#Documentação da API
quarkus.smallrye-openapi.path=/swagger

#Configuração do DataSource
quarkus.DataSource.url = jdbc:postgresql://localhost:5432/postgres
quarkus.DataSource.driver = org.postgresql.driver
quarkus.DataSource.username = postgres
quarkus.DataSource.password = postgres

%dev.quarkus.jpa.properties.javax.persistence.schema-generation.create-source=metadata 
%dev.quarkus.jpa.properties.javax.persistence.schema-generation.scripts.action=create 
%dev.quarkus.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql 
%dev.quarkus.jpa.properties.hibernate.hbm2ddl.delimiter=; 




#Opções disponíveis: none( utilizado para produção, juntamente com flyway). create, drop-and-create, drop, update
#executar ./wmvn compile quarkus:dev -Dquarkus.profile=dev

%dev.quarkus.hibernate-orm.database.generation = none
#%dev.quarkus.hibernate-orm.sql-load-script = import-dev.sql


%test.quarkus.hibernate-orm.database.generation = none
#%test.quarkus.hibernate-orm.sql-load-script = import-dev.sql

%prod.quarkus.hibernate-orm.database.generation = none
%prod.quarkus.hibernate-orm.sql-load-script = no-file

#Para usar esse recurso, basta abrir a Dev UI quando a quarkus-flyway extensão estiver instalada 
#e clicar no Datasources link no painel Flyway. Aperte o Create Initial Migrationbotão e o seguinte acontecerá:
%dev.quarkus.flyway.migrate-at-start=true
%dev.quarkus.flyway.baseline-on-migrate=true
%dev.quarkus.flyway.clean-at-starte=true
%test.quarkus.flyway.clean-at-start=true
%dev.quarkus.flyway.baseline-version=0.0.0
%dev.quarkus.flyway.baseline-description= Versão antes do flyway
%dev.quarkus.flyway.schemas=public
%dev.quarkus.flyway.table=flyway_schema_history
%dev.quarkus.flyway..locations=db/prod/migration,db/dev/migration
quarkus.flyway.baseline-on-migrate=true
%dev.quarkus.flyway.clean-at-start=true
quarkus.flyway.migrate-at-start=true
